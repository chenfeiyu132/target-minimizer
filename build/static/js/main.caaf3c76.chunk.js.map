{"version":3,"sources":["components/Shop/Item/Item.js","components/Shop/SearchBar/SearchBar.js","images/exit.svg","components/Modal/Modal.js","components/Card/Card.js","components/Info/Info.js","components/CardSet/CardSet.js","images/target.svg","pages/home/home.js","hooks/input-hook.js","App.js","reportWebVitals.js","index.js"],"names":["ShopItem","item","className","src","image_url","alt","Html5Entities","decode","name","tcin","min_cost","min_stores","slice","map","index","join","ShopSearchBar","handleSubmit","handleRandom","searchQuery","setSearchQuery","id","onSubmit","htmlFor","type","class","placeholder","value","onInput","e","target","onClick","Modal","show","close","children","title","ReactDOM","createPortal","CSSTransition","in","unmountOnExit","timeout","enter","exit","stopPropagation","Close","document","getElementById","Card","Info","CardSet","items","Home","useState","modalTitle","setModalTitle","searchItems","setSearchItems","modalOpen","setModalOpen","message","setMessage","modalContent","setModalContent","initialValue","setValue","reset","bind","onChange","event","useInput","query","setQuery","resetQuery","itemsRef","useRef","scrollToItems","ref","window","scrollTo","top","current","offsetTop","behavior","logo","evt","preventDefault","str","url","length","test","fetch","then","res","json","data","success","result","fetchTCIN","itemInfo","fetchItems","alert","style","visibility","data-content","fontWeight","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","smoothscroll","polyfill","render","StrictMode"],"mappings":"4XAmBeA,EAhBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEhB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAKF,EAAKG,UAAWC,IAAI,SAC9B,sBAAKH,UAAU,iBAAf,UACI,6BAAKI,gBAAcC,OAAON,EAAKO,QAC/B,uCAAUP,EAAKQ,QAEf,yCAAYR,EAAKS,YACjB,2DAA8BT,EAAKU,WAAL,KAAwBC,MAAM,EATrD,GASoEC,KAAI,SAACL,EAAMM,GAAP,gBAAoBN,EAApB,YAA4BP,EAAKU,WAAL,GAAsBG,GAAlD,QAA6DC,KAAK,mBCSlJC,G,MApBO,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,YAAaC,EAA3C,EAA2CA,eAA3C,OAClB,uBAAMC,GAAG,aAAaC,SAAUL,EAAhC,UACI,uBAAOM,QAAQ,gBAAf,SACI,sBAAMrB,UAAU,kBAAhB,2BAEJ,uBACIsB,KAAK,OACLC,MAAM,QACNC,YAAY,cACZlB,KAAK,IACLmB,MAAOR,EACPS,QAAS,SAAAC,GAAC,OAAIT,EAAeS,EAAEC,OAAOH,UAE1C,sBAAKzB,UAAU,eAAf,UACI,wBAAQmB,GAAG,gBAAgBI,MAAM,iBAAiBD,KAAK,SAAvD,oBACA,wBAAQH,GAAG,gBAAgBI,MAAM,mBAAmBM,QAASb,EAA7D,oCCjBG,G,MAAA,IAA0B,kC,QC2B1Bc,EAtBD,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,OAAOC,IAASC,aACZ,cAACC,EAAA,EAAD,CAAeC,GAAIP,EAAMQ,eAAa,EAACC,QAAS,CAAEC,MAAO,EAAGC,KAAM,KAAlE,SACI,qBACA1C,UAAU,QACV6B,QAAS,kBAAMG,KAFf,SAIA,sBAAKhC,UAAU,gBAAgB6B,QAAS,SAACF,GAAD,OAAOA,EAAEgB,mBAAjD,UACI,sBAAK3C,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BkC,IAC7B,wBAAQlC,UAAU,QAAQ6B,QAAS,kBAAMG,KAAzC,SACI,qBAAK/B,IAAK2C,EAAOzC,IAAI,eAG7B,sBAAKH,UAAU,aAAf,cAA8BiC,EAA9B,cAIRY,SAASC,eAAe,UCXjBC,G,MAVF,SAAC,GAAgB,IAAfd,EAAc,EAAdA,SACX,OACI,qBAAKjC,UAAU,OAAf,SACI,qBAAKA,UAAU,iBAAf,SACKiC,QCmBFe,G,MAvBF,WACT,OACI,sBAAKhD,UAAU,eAAf,UACI,oJAGA,kLAIA,oUAKA,4bCHGiD,G,MAXC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACd,OACI,qBAAKlD,UAAU,cAAf,SACKkD,EAAMvC,KAAI,SAACZ,GAAD,OAEP,cAAC,EAAD,UAAOA,WCRR,MAA0B,mC,MC8H1BoD,MAxHf,WAAiB,IAAD,EACwBC,mBAAS,IADjC,mBACLC,EADK,KACOC,EADP,OAE0BF,mBAAS,IAFnC,mBAELG,EAFK,KAEQC,EAFR,OAGsBJ,oBAAS,GAH/B,mBAGLK,EAHK,KAGMC,EAHN,OAIkBN,mBAAS,MAJ3B,mBAILO,EAJK,KAIIC,EAJJ,OAK4BR,mBAAS,mBAAG7B,MAAM,OAAT,uCALrC,mBAKLsC,EALK,KAKSC,EALT,OCJQ,SAAAC,GAAiB,IAAD,EACVX,mBAASW,GADC,mBAC7BtC,EAD6B,KACtBuC,EADsB,KAGpC,MAAO,CACHvC,QACAuC,WACAC,MAAO,kBAAMD,EAASD,IACtBG,KAAM,CACFzC,QACA0C,SAAU,SAAAC,GACNJ,EAASI,EAAMxC,OAAOH,UDA2B4C,CAAS,IAAxDC,EANF,EAMJ7C,MAAsB8C,EANlB,EAMSP,SAAyBQ,EANlC,EAM4BP,MAClCQ,EAAWC,iBAAO,MAIlBC,EAAgB,kBADDC,EACmBH,EADXI,OAAOC,SAAS,CAACC,IAAKH,EAAII,QAAQC,UAAWC,SAAU,WAAhE,IAACN,GAyErB,OACI,sBAAK5E,UAAU,MAAf,UACI,wBAAQA,UAAU,SAAlB,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKC,IAAKkF,EAAMnF,UAAU,OAAOG,IAAI,SACrC,qBAAKH,UAAU,SAAf,SACI,cAAC,EAAD,CAAee,aAxBd,SAACqE,GAClBA,EAAIC,iBACJ,IAtDYC,EAsDRC,EAAM,QArDY,KADVD,EAuDDhB,GAtDAkB,QAAgB,QAAQC,KAAKH,IAuDpCC,GAAG,WAAQjB,GACXoB,MAAMH,GAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,IA3B9B,SAACA,GAEf,GADAxC,EAAc,gBACVwC,EAAKC,QAAS,CACd,IAAIhG,EAAO+F,EAAKE,OAChBlC,EAAgB,cAAC,EAAD,CAAU/D,KAAMA,KAChC2D,GAAa,GACbE,EAAW,WAEXA,EAAWkC,EAAKnC,SAoBZsC,CAAUH,QAGdP,GAAG,wBAAqBjB,GACxBoB,MAAMH,GAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,IApB7B,SAACA,GAChB,GAAIA,EAAKC,QAAS,CACd,IAAM7C,EAAQ4C,EAAKE,OACnBxC,EAAeN,EAAMvC,KAAI,SAACuF,GAAD,OACzB,cAAC,EAAD,CAAUnG,KAAMmG,QAEhBvB,KAeIwB,CAAWL,OAGnBtB,KAU2DxD,aA/D1C,SAACoE,GAClBA,EAAIC,iBAEJK,MADY,gBACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAACG,GAErC,GADAlC,EAAW,MACPkC,EAAKC,QAAS,CACdzC,EAAc,gBACd,IAAIvD,EAAO+F,EAAKE,OAChBlC,EAAgB,cAAC,EAAD,CAAU/D,KAAMA,KAChC2D,GAAa,QAGb0C,MAAMN,EAAKnC,aAmDoE1C,YAAaqD,EAAOpD,eAAgBqD,MAE/G,sBAAM8B,MAAO,CAACC,WAAa3C,EAAU,UAAY,UAAjD,SACKA,GAAoB,kCAIjC,sBAAK3D,UAAU,OAAf,UACI,cAAC,EAAD,CAAOkC,MAAOmB,EAAYtB,KAAM0B,EAAWzB,MAjFzC,WACV0B,GAAa,IAgFL,SAA0DG,IAC1D,qBAAKe,IAAKH,EAAUzE,UAAU,eAA9B,SACI,cAAC,EAAD,CAASkD,MAAOK,SAGxB,qBAAKvD,UAAU,SAAf,SACI,sBAAKmB,GAAG,UAAUnB,UAAU,cAA5B,UACI,uBAAMA,UAAU,kBAAkBmB,GAAG,eAAeU,QApF7C,WACnByB,EAAc,QACdQ,EAAgB,cAAC,EAAD,KAChBJ,GAAa,IAiF4E6C,eAAa,qBAA1F,8BACqB,sBAAMF,MAAO,CAACC,WAAY,SAAUE,WAAY,UAAhD,kBAErB,sBAAMxG,UAAU,QAAhB,iBACA,uBAAMA,UAAU,QAAhB,8BAEI,mBAAGmB,GAAG,OAAOnB,UAAU,YAAYyG,KAAK,0BAA0BF,eAAa,aAA/E,oC,OEzGTG,MARf,WACE,OACA,cAAC,IAAD,UACE,cAAC,EAAD,OCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAAaC,WAEbjF,IAASkF,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzE,SAASC,eAAe,SAM1B6D,M","file":"static/js/main.caaf3c76.chunk.js","sourcesContent":["import './Item.css'\nimport { Html5Entities } from 'html-entities'\n\nconst ShopItem = ({ item }) => {\n    const NUM_STORES = 3;\n    return (\n        <div className='item'>\n            <img src={item.image_url} alt='item'/>\n            <div className='item-container'>\n                <h3>{Html5Entities.decode(item.name)}</h3>\n                <p>TCIN: {item.tcin}</p>\n                \n                <p>Price: ${item.min_cost}</p>\n                <p>Sample Cheapest Store(s): {item.min_stores['name'].slice(0, NUM_STORES).map((name, index) => `${name}(${item.min_stores['id'][index]})`).join(' and ')}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ShopItem","import './SearchBar.css';\n\nconst ShopSearchBar = ({handleSubmit, handleRandom, searchQuery, setSearchQuery}) => (\n    <form id=\"search-bar\" onSubmit={handleSubmit}>\n        <label htmlFor=\"header-search\">\n            <span className=\"visually-hidden\">Search Item</span>\n        </label>\n        <input\n            type=\"text\"\n            class=\"input\"\n            placeholder=\"Search TCIN\"\n            name=\"s\"\n            value={searchQuery}\n            onInput={e => setSearchQuery(e.target.value)}\n        />\n        <div className='button-group'>\n            <button id=\"search-button\" class=\"primary button\" type=\"submit\">Search</button>\n            <button id='random-button' class='secondary button' onClick={handleRandom}>Feeling Random</button>\n        </div>\n    </form>\n);\n\nexport default ShopSearchBar;","export default __webpack_public_path__ + \"static/media/exit.6f2349ca.svg\";","import './Modal.css'\nimport Close from \"../../images/exit.svg\";\nimport { CSSTransition } from 'react-transition-group';\nimport ReactDOM from 'react-dom';\n\nconst Modal = ({ show, close, children, title }) => {\n    return ReactDOM.createPortal(\n        <CSSTransition in={show} unmountOnExit timeout={{ enter: 0, exit: 300 }}>\n            <div\n            className=\"modal\"\n            onClick={() => close()}\n            >\n            <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"modal-header\">\n                    <h4 className='modal-title'>{title}</h4>\n                    <button className=\"close\" onClick={() => close()}>\n                        <img src={Close} alt=\"close\" />\n                    </button>\n                </div>\n                <div className=\"modal-body\"> {children} </div>\n            </div>\n            </div>\n        </CSSTransition>,\n        document.getElementById('root')\n    );\n  };\n\nexport default Modal","import './Card.css'\n\nconst Card = ({children}) => {\n    return (\n        <div className='card'>\n            <div className='card-container'>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Card","import './Info.css'\n\nconst Info = () => {\n    return (\n        <div className='info-wrapper'>\n            <p>\n                The search tool essentially gives you the target store locations which provides the cheapest items of your choosing\n            </p>\n            <p>\n                Now you might be wondering...How on earth would that be useful?\n                Well, let me tell you a little saving trick that Target doesn't want you to know.\n            </p>\n            <p>\n                When you checkout online, Target uses the home store you set to calculate the price of the items in your cart.\n                However, you can choose to pick up the items wherever you desire.\n                Thus, you can set the cheapest store for your items as your home store and pick up the items at your actual store. \n            </p>\n            <p>\n                For example, you could set your homestore on the top left corner to be Bowling Green, KY(which has eggs going for .69 cents), and set the pick up location to be Champaign Campus Town, IL(which has eggs for 1.39).\n                Boom, you just saved 70 cents per carton of eggs. You can do this on hundreds of items at Target(however not all), there's usually price discrepencies for common every items like eggs and milk.\n            </p>\n        </div>\n    )\n}\n\nexport default Info;","import { Card } from '../index.js'\nimport './CardSet.css'\n\nconst CardSet = ({items}) => {\n    return (\n        <div className='column-grid'>\n            {items.map((item) => \n            \n                <Card>{item}</Card>\n            )}\n        </div>\n    )\n}\n\nexport default CardSet;","export default __webpack_public_path__ + \"static/media/target.d4dd655f.svg\";","import React, { useState, useRef } from 'react';\nimport { useInput } from '../../hooks/input-hook';\nimport { ShopSearchBar, ShopItem, Modal, Info, CardSet } from '../../components';\nimport logo from '../../images/target.svg';\nimport './home.css';\n\nfunction Home() {\n    const [modalTitle, setModalTitle] = useState('');\n    const [searchItems, setSearchItems] = useState([]);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [message, setMessage] = useState(null);\n    const [modalContent, setModalContent] = useState(<p class=\"text\">Please begin your search</p>);\n    const { value:query, setValue:setQuery, reset:resetQuery } = useInput('');\n    const itemsRef = useRef(null);\n    \n    \n    const scrollToRef = (ref) => window.scrollTo({top: ref.current.offsetTop, behavior: 'smooth'})   \n    const scrollToItems = () => scrollToRef(itemsRef)\n\n    const isTcin = (str) => {\n        return str.length === 8 && /^\\d+$/.test(str);\n    }\n    const close = () => {\n        setModalOpen(false);\n    }\n\n    const populateHelper = () => {\n        setModalTitle('Help')\n        setModalContent(<Info/>)\n        setModalOpen(true);\n    }   \n\n    const handleRandom = (evt) => {\n        evt.preventDefault();\n        const url = '/item/random'\n        fetch(url).then(res => res.json()).then((data) => {\n            setMessage(null);\n            if (data.success) {\n                setModalTitle('Item Details');\n                var item = data.result;\n                setModalContent(<ShopItem item={item}/>)\n                setModalOpen(true);\n            } else {\n                // open alert with data.message saying nothing found\n                alert(data.message);\n            }\n        })\n    }\n\n    const fetchTCIN = (data) => {\n        setModalTitle('Item Details');\n        if (data.success) {\n            var item = data.result;\n            setModalContent(<ShopItem item={item}/>)\n            setModalOpen(true);\n            setMessage(null);\n        } else {\n            setMessage(data.message);\n        }\n    }\n\n    const fetchItems = (data) => {\n        if (data.success) {\n            const items = data.result;\n            setSearchItems(items.map((itemInfo) => \n            <ShopItem item={itemInfo}/>\n        ));\n            scrollToItems();\n        }\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        let url = '/item'\n        if (isTcin(query)) {\n            url += `/${query}`\n            fetch(url).then(res => res.json()).then(data => {\n                fetchTCIN(data);\n            });\n        } else {\n            url += `/search?query=${query}`\n            fetch(url).then(res => res.json()).then(data => {\n                fetchItems(data);\n            });\n        }\n        resetQuery();   \n    }\n\n\n    return (\n        <div className=\"App\">\n            <header className=\"header\"> \n                <div className=\"content\">\n                    <img src={logo} className=\"logo\" alt=\"logo\" />\n                    <div className='search'>\n                        <ShopSearchBar handleSubmit={handleSubmit} handleRandom={handleRandom} searchQuery={query} setSearchQuery={setQuery}/>\n                    </div>\n                    <span style={{visibility : message ? 'visible' : 'hidden'}}>\n                        {message ? message : 'Please begin your search'}\n                    </span>\n                </div>\n            </header>\n            <div className='body'>\n                <Modal title={modalTitle} show={modalOpen} close={close}>{modalContent}</Modal>\n                <div ref={itemsRef} className='search-items'>\n                    <CardSet items={searchItems}/>\n                </div>\n            </div>\n            <div className='footer'>\n                <div id='tribute' className='text-center'>\n                    <span className='small highlight' id='help-trigger' onClick={populateHelper} data-content=\"How do I use this?\">\n                        How do I use this<span style={{visibility: 'hidden', fontWeight: 'bolder'}}>?</span>\n                    </span>\n                    <span className='space'> | </span>\n                    <span className='small'>\n                        Fun gadget by&nbsp;\n                        <a id='name' className='highlight' href=\"https://feiyuwong.codes\" data-content=\"Feiyu Wong\">\n                            Feiyu Wong\n                        </a>\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import {useState} from \"react\";\n\nexport const useInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    return {\n        value,\n        setValue,\n        reset: () => setValue(initialValue),\n        bind: {\n            value,\n            onChange: event => {\n                setValue(event.target.value);\n            }\n        }\n    }\n}","import Home from './pages/home/home'\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  return (\n  <Router>\n    <Home/>\n  </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nsmoothscroll.polyfill();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}